version: '3.8'

services:

  # NGINX
  nginx-service:
    image: nginx:stable-alpine
    container_name: nginx-container-${DOCKER_PROJECT_NAME}
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/project
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php8-service
      - mysql8-service

  # PHP
  php8-service:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: php8-container-${DOCKER_PROJECT_NAME}
    ports:
      - "9000:9000"
    volumes:
      - ./:/var/www/project
    env_file:
      - .env
    environment:
      - TZ=${TZ}
      - APP_ENV=${APP_ENV}
      - APP_SECRET=${APP_SECRET}
      - DATABASE_URL=${DATABASE_URL}
      - MAILER_DSN=${MAILER_DSN}

  # MYSQL
  mysql8-service:
    image: mysql:latest
#    platform: windows/amd64
    restart: on-failure
    logging:
      options:
        max-size: "5m"
        max-file: "10"
    container_name: mysql8-container-${DOCKER_PROJECT_NAME}
    ports:
      - "4306:3306"
    volumes:
      - mysql-php-app-program:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password --innodb-use-native-aio=0
    env_file:
      - .env
    environment:
      - TZ=${TZ}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}

  # NODE
  node-service:
    image: node:18.4.0
    container_name: node-container-${DOCKER_PROJECT_NAME}
    volumes:
      - ./:/var/www/project
    working_dir: /var/www/project
    command: bash -c "yarn install && yarn dev --watch"

volumes:
  mysql-php-app-program:
    name: mysql-data-php-app-program